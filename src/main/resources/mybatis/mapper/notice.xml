<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.goodee.gdlibrary.mapper.NoticeMapper">

	<!-- 공지사항 전체 레코드 갯수 -->
	<select id="selectNoticeCount" resultType="Long">
		SELECT COUNT(NOTICE_NO)
		  FROM NOTICE
	</select>

	<!-- 
		공지사항 테이블 목록 가져오기(오라클) 
	<select id="selectNotices" parameterType="Map" resultType="NoticeDTO">
		SELECT N.ROW_NUM, N.NOTICE_NO, N.NOTICE_TITLE, N.NOTICE_CONTENT, N.NOTICE_CREATED, N.NOTICE_MODIFIED, N.NOTICE_IP, N.NOTICE_HIT
		  FROM (SELECT ROW_NUMBER() OVER(ORDER BY NOTICE_NO DESC) AS ROW_NUM, NOTICE_NO, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_CREATED, NOTICE_MODIFIED, NOTICE_IP, NOTICE_HIT
		          FROM NOTICE) N
		 WHERE N.ROW_NUM BETWEEN #{beginRecord} AND #{endRecord}
	</select>
	-->
	
	<!-- 공지사항 테이블 목록 가져오기(MySQL) -->
	<select id="selectNotices" parameterType="Map" resultType="NoticeDTO">
		SELECT NOTICE_NO, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_CREATED, NOTICE_MODIFIED, NOTICE_IP, NOTICE_HIT
		  FROM NOTICE
		 ORDER BY NOTICE_NO DESC
		 LIMIT #{beginRecord}, #{recordPerPage}
	</select>

	<!-- 공지사항 게시글 삽입(오라클) 
		 selectKey : NOTICE_SEQ.NEXTVAL 값을 INSERT문 실행 전에 NoticeDTO의 noticeNo에 넣어둔다. 
	<insert id="insertNotice" parameterType="NoticeDTO">
		<selectKey keyProperty="noticeNo" resultType="Long" order="BEFORE">
			SELECT NOTICE_SEQ.NEXTVAL
			  FROM DUAL
		</selectKey>
		INSERT INTO NOTICE
			(NOTICE_NO, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_CREATED, NOTICE_MODIFIED, NOTICE_IP, NOTICE_HIT)
		VALUES
			(#{noticeNo}, #{noticeTitle}, #{noticeContent}, SYSDATE, SYSDATE, #{noticeIp}, 0)
	</insert>
	-->
	
	<!-- 공지사항 게시글 삽입(MySQL) -->
	<insert id="insertNotice" parameterType="NoticeDTO">
		<selectKey keyProperty="noticeNo" resultType="Long" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO NOTICE
			(NOTICE_TITLE, NOTICE_CONTENT, NOTICE_CREATED, NOTICE_MODIFIED, NOTICE_IP, NOTICE_HIT)
		VALUES
			(#{noticeTitle}, #{noticeContent}, NOW(), NOW(), #{noticeIp}, 0)
	</insert>
	
	<!-- 
		파일 첨부 추가(오라클) 
	<insert id="insertFileAttach" parameterType="NoticeFileAttachDTO">
		INSERT INTO NOTICE_FILE_ATTACH
			(NOTICE_FILE_ATTACH_NO, NOTICE_FILE_ATTACH_PATH, NOTICE_FILE_ATTACH_ORIGIN, NOTICE_FILE_ATTACH_SAVED, NOTICE_NO)
		VALUES
			(NOTICE_FILE_ATTACH_SEQ.NEXTVAL, #{noticeFileAttachPath}, #{noticeFileAttachOrigin}, #{noticeFileAttachSaved}, #{noticeNo})
	</insert>
	-->
	
	<!-- 파일 첨부 추가(MySQL) -->
	<insert id="insertFileAttach" parameterType="NoticeFileAttachDTO">
		INSERT INTO NOTICE_FILE_ATTACH
			(NOTICE_FILE_ATTACH_PATH, NOTICE_FILE_ATTACH_ORIGIN, NOTICE_FILE_ATTACH_SAVED, NOTICE_NO)
		VALUES
			(#{noticeFileAttachPath}, #{noticeFileAttachOrigin}, #{noticeFileAttachSaved}, #{noticeNo})
	</insert>
	
	<!-- 공지사항 조회수 증가 -->
	<update id="updateHit" parameterType="Long">
		UPDATE NOTICE
		   SET NOTICE_HIT = NOTICE_HIT + 1
		 WHERE NOTICE_NO = #{noticeNo}
	</update>
	
	<!-- 공지사항 게시글 상세보기 -->
	<!-- 게시글 정보 -->
	<select id="selectNoticeByNoticeNo" parameterType="Long" resultType="NoticeDTO">
		SELECT NOTICE_NO, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_CREATED, NOTICE_MODIFIED, NOTICE_IP, NOTICE_HIT
		  FROM NOTICE
		 WHERE NOTICE_NO = #{noticeNo}
	</select>
	<!-- 게시글에 첨부된 첨부 파일 목록 -->
	<select id="selectFileAttachListInTheNotice" parameterType="Long" resultType="NoticeFileAttachDTO">
		SELECT NOTICE_FILE_ATTACH_NO, NOTICE_FILE_ATTACH_PATH, NOTICE_FILE_ATTACH_ORIGIN, NOTICE_FILE_ATTACH_SAVED, NOTICE_NO
		  FROM NOTICE_FILE_ATTACH
		 WHERE NOTICE_NO = #{noticeNo}
	</select>
	<!-- 첨부 파일 정보 -->	
	<select id="selectFileAttachByNo" parameterType="Long" resultType="NoticeFileAttachDTO">
		SELECT NOTICE_FILE_ATTACH_NO, NOTICE_FILE_ATTACH_PATH, NOTICE_FILE_ATTACH_ORIGIN, NOTICE_FILE_ATTACH_SAVED, NOTICE_NO
		  FROM NOTICE_FILE_ATTACH
		 WHERE NOTICE_FILE_ATTACH_NO = #{noticeFileAttachNo}
	</select>
	
	<!-- 공지사항 게시글 삭제하기 -->
	<delete id="deleteNoticeByNoticeNo" parameterType="Long">
		DELETE
		  FROM NOTICE
		 WHERE NOTICE_NO = #{noticeNo}
	</delete>

	<!-- 
		공지사항 게시글 수정하기(오라클) 
	<update id="updateNoticeByNoticeNo" parameterType="NoticeDTO">
		UPDATE NOTICE
		   SET NOTICE_TITLE = #{noticeTitle}
		     , NOTICE_CONTENT = #{noticeContent}
		     , NOTICE_MODIFIED = SYSDATE
		     , NOTICE_IP = #{noticeIp}
		 WHERE NOTICE_NO = #{noticeNo}
	</update>
	-->
	
	<!-- 공지사항 게시글 수정하기(MySQL) -->
	<update id="updateNoticeByNoticeNo" parameterType="NoticeDTO">
		UPDATE NOTICE
		   SET NOTICE_TITLE = #{noticeTitle}
		     , NOTICE_CONTENT = #{noticeContent}
		     , NOTICE_MODIFIED = NOW()
		     , NOTICE_IP = #{noticeIp}
		 WHERE NOTICE_NO = #{noticeNo}
	</update>
	
	<!-- 
		검색된 레코드 갯수(오라클) 
	<select id="selectFindCount" parameterType="Map" resultType="Long">
		SELECT COUNT(*)
		  FROM NOTICE
		 WHERE ${column} LIKE '%' || #{query} || '%'
	</select>
	-->
	
	<!-- 검색된 레코드 갯수(MySQL) -->
	<select id="selectFindCount" parameterType="Map" resultType="Long">
		SELECT COUNT(*)
		  FROM NOTICE
		 WHERE ${column} LIKE CONCAT('%', #{query}, '%')
	</select>
	
	<!-- 
		검색(오라클) 
	<select id="selectFindList" parameterType="Map" resultType="NoticeDTO">
		SELECT N.ROW_NUM, N.NOTICE_NO, N.NOTICE_TITLE, N.NOTICE_CONTENT, N.NOTICE_CREATED, N.NOTICE_MODIFIED, N.NOTICE_IP, N.NOTICE_HIT
		  FROM (SELECT ROW_NUMBER() OVER(ORDER BY NOTICE_NO DESC) AS ROW_NUM, NOTICE_NO, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_CREATED, NOTICE_MODIFIED, NOTICE_IP, NOTICE_HIT
		          FROM NOTICE
		         WHERE ${column} LIKE '%' || #{query} || '%') N
		 WHERE N.ROW_NUM BETWEEN #{beginRecord} AND #{endRecord}
	</select>
	-->
	
	<!-- 검색(MySQL) -->
	<select id="selectFindList" parameterType="Map" resultType="NoticeDTO">
		SELECT NOTICE_NO, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_CREATED, NOTICE_MODIFIED, NOTICE_IP, NOTICE_HIT
		  FROM NOTICE
		 WHERE ${column} LIKE CONCAT('%', #{query}, '%')
		 ORDER BY NOTICE_NO DESC
		 LIMIT #{beginRecord}, #{recordPerPage}
	</select>
	
	<!-- 첨부 파일 삭제 -->
	<delete id="deleteFileAttach" parameterType="Long">
		DELETE
		  FROM NOTICE_FILE_ATTACH
		 WHERE NOTICE_FILE_ATTACH_NO = #{noticeFileAttachNo}
	</delete>
	
	<!-- 스케쥴러 사용을 위한 SQL -->
	<!-- noticeFileAttach 테이블에 있는 전체 데이터 가져오기 -->
	<select id="selectAllFileAttaches" resultType="NoticeFileAttachDTO">
		SELECT NOTICE_FILE_ATTACH_NO, NOTICE_FILE_ATTACH_PATH, NOTICE_FILE_ATTACH_ORIGIN, NOTICE_FILE_ATTACH_SAVED, NOTICE_NO
		  FROM NOTICE_FILE_ATTACH
	</select>

</mapper>